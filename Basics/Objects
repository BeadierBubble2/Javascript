Object- data type used for storing key-value pairs
_____________________

object literal

let spaceship = {
  color: 'silver',
 'Fuel Type: 'diesel'
 };
 
 color: 'silver - key value pair = A key is like a variable name that points to a location
                  in memory that holds a value
 color - key's name/ identifier
'silver' - value
___________________
Access property

two ways 
  - dot notation .
  - bracket notation []
  
1) dot notation

let spaceship {
  color: 'silver' 
};

spaceship.color; // return 'silver'

2) bracket notation
  - also use variable's names to select object's keys
  
spaceship[color]; // return 'silver'
__________________

Change, add, & delete Properties

const spaceship = {
    type: 'shuttle'
  };
  
  spaceship.type = 'alien'; //changes type property's value to 'alien'
  spaceship.speed = 'Mach 5' //adds a new key/property to the object spaceship
  delete spaceship.speed; //removes the speed property
  ________________________
  
  Object Methods
  
  method- data started on an object as a function
  
  A property is what an object has 
  A method is what an object does
  
  
  
  object literals
  key- serves as our method's name
  value - an anonymous function expression
  
  2 ways to write object literals
    
    1)
    const spaceship = {
      invade: functon () {
        console.log('Hello')
        }
       };
     
     2) 
     const spaceship = {
      invade () {
        console.log('Hello")
        }
      };
_______________________
 
 Nested Objects
  - an object might have another object as a property
  

const spaceship = {
  nanoelectronics: {
    'back-up': {
      battery: 'Lithium',
      terabytes: 50
    }
  }
}

spaceship.nanoelectronic['back-up'].battery; //returns 'Lithium'
